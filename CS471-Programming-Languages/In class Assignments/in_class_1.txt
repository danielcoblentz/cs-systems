In-class Exercise (Scheme)
**

Due: To be announced in class.
Please submit  solutions to all problems to the Blackboard.

**
1. Implement a scheme function that returns the third element of a list.
2. Write a simple function that calculates the sum of a list of integers.  e.g. (sum '(5 4 6)) returns 15.  Implement a non-tail-recursive solution and a tail-recursive solution.
3. Write a Scheme max function that finds the largest number. The input should be a list of integers. The logic as is discussed as follows. 

boolean max(lst){
    if (lst has only one element){
        return the one element in lst
    }
    else if (car(lst) > max(cdr(lst))) {
        return car(lst)
    }
    else {
        return max(cdr(lst))
    }
}

4. Write a Scheme function numofatoms that determines the number of top-level elements in a list. 
For example, (numOfSymbols  '((1 3)  7  (4  (5  2)   ) )  should return 3.

5. Write a Scheme function numofatoms that determines the number of elements in a list. 
For example, (numOfSymbols  '((1 3)  7  (4  (5  2)   ) )  should return 6.





